// Constants are used to make it easier to grok the rules below
const N = 'never';
const NML = 'never-multi-line';
const A = 'always';
const AML = 'always-multi-line';
const ASL = 'always-single-line';
const E = {
	severity: 'error',
};

module.exports = {
	extends: 'stylelint-config-recommended',
	defaultSeverity: 'warning',
	rules: {
		'value-no-vendor-prefix': [true],
		'property-no-vendor-prefix': [true],
		'no-unknown-animations': [true],
		'declaration-no-important': [true, E],

		// Stylistic
		'color-hex-length': ['short'],
		'color-hex-case': ['lower'],
		'font-family-name-quotes': ['always-where-required', E],
		'function-comma-newline-after': [NML, E],
		'function-comma-newline-before': [NML, E],
		'function-comma-space-after': [A],
		'function-comma-space-before': [N],
		'function-max-empty-lines': [0, E],
		'function-name-case': ['lower'],
		'function-parentheses-newline-inside': [NML, E],
		'function-parentheses-space-inside': [NML, E],
		'function-url-quotes': [A, E],
		'function-whitespace-after': [A, E],
		'number-leading-zero': [A],
		'number-no-trailing-zeros': [true],
		'string-quotes': ['double', {
			severity: 'warning',
			avoidEscape: true,
		}],
		'length-zero-no-unit': [true],
		'value-keyword-case': ['lower', E],
		'value-list-comma-newline-after': [AML],
		'value-list-comma-newline-before': [NML],
		'value-list-comma-space-after': [A],
		'value-list-comma-space-before': [N],
		'value-list-max-empty-lines': [0],
		'property-case': ['lower', E],
		'declaration-bang-space-after': [N, E],
		'declaration-bang-space-before': [A, E],
		'declaration-colon-space-after': [A],
		'declaration-colon-space-before': [N],
		'declaration-block-semicolon-newline-after': [AML],
		'declaration-block-semicolon-newline-before': [N],
		'declaration-block-semicolon-space-after': [ASL],
		'declaration-block-semicolon-space-before': [N],
		'declaration-block-trailing-semicolon': [A],
		'block-closing-brace-empty-line-before': [N],
		'block-closing-brace-newline-after': [A],
		'block-opening-brace-newline-after': [AML],
		'block-opening-brace-newline-before': [NML],
		'block-opening-brace-space-after': [ASL],
		'block-opening-brace-space-before': [A],
		'block-closing-brace-newline-before': [AML],
		'block-closing-brace-space-before': [ASL],

		'selector-attribute-brackets-space-inside': [N],
		'selector-attribute-operator-space-after': [N],
		'selector-attribute-operator-space-before': [N],
		'selector-attribute-quotes': [A, E],
		'selector-combinator-space-after': [A],
		'selector-combinator-space-before': [A],
		'selector-descendant-combinator-no-non-space': [true, E],
		'selector-pseudo-class-case': ['lower', E],
		'selector-pseudo-class-parentheses-space-inside': [N],
		'selector-pseudo-element-case': ['lower', E],
		'selector-pseudo-element-colon-notation': ['double', E],
		'selector-type-case': ['lower', E],
		'selector-list-comma-newline-after': [AML],
		'selector-list-comma-newline-before': [NML],
		'selector-list-comma-space-after': [A],
		'selector-list-comma-space-before': [N],
		'rule-empty-line-before': [AML],
		'media-feature-colon-space-after': [A],
		'media-feature-colon-space-before': [N],
		'media-feature-name-case': ['lower', E],
		'media-feature-parentheses-space-inside': [N],
		'media-feature-range-operator-space-after': [A],
		'media-feature-range-operator-space-before': [A],
		'media-query-list-comma-newline-after': [NML],
		'media-query-list-comma-newline-before': [NML],
		'media-query-list-comma-space-after': [A],
		'media-query-list-comma-space-before': [N],
		'at-rule-empty-line-before': [A],
		'at-rule-name-case': ['lower', E],
		'at-rule-name-space-after': [N],
		'at-rule-semicolon-newline-after': [A],
		'at-rule-semicolon-space-before': [N],

		// General
		'indentation': ['tab', {
			baseIndentLevel: 1,
			indentClosingBrace: false,
		}],
		'linebreaks': ['unix', E],
		'max-empty-lines': [1],
		'no-missing-end-of-source-newline': [true],
		'no-empty-first-line': [true],
	},
};
